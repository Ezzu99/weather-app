{"version":3,"sources":["components/weather/weatherData/weatherDetails/WeatherDetails.js","components/weather/weatherData/WeatherData.js","assets/clouds.png","components/weather/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherDetails","props","className","title","value","WeatherData","cityName","src","iconp","alt","currentTemp","toFixed","maxTemp","minTemp","description","feelsLike","humidity","pressure","visibility","cloudiness","windDeg","windSpeed","api","axios","create","Weather","useState","name","sys","id","weather","icon","main","feels_like","temp","temp_max","temp_min","clouds","all","wind","deg","speed","wData","setwData","city","setCity","getData","event","a","preventDefault","get","then","res","data","catch","e","console","log","onSubmit","type","placeholder","onChange","target","autoFocus","TransitionGroup","CSSTransition","timeout","classNames","toUpperCase","length","Clouds","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c99bb820.chunk.js","sourcesContent":["import React from 'react';\nimport './WeatherDetails.css';\n\nconst WeatherDetails = (props) => {\n    return (\n        <>\n            <div className=\"detail-container\">\n                <h6 className=\"container-title\">{props.title}</h6>\n                <p className=\"container-value\">{props.value}</p>\n            </div>\n        </>\n    );\n}\n\nexport default WeatherDetails;","import React from 'react';\nimport WeatherDetails from './weatherDetails/WeatherDetails';\nimport './WeatherData.css'\n\nconst WeatherData = (props) => {\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"container-header\">\n                    <h1 className=\"city-name\">{props.cityName}</h1>\n                    <img className=\"icon\" src={props.iconp} alt=\"icon\"></img>\n                </div>\n                <div className=\"container-temp\">\n                    <h3 className=\"temp\">{(props.currentTemp - 273).toFixed(1)}°</h3>\n                    <h5 className=\"temp-min-max\">H:{(props.maxTemp - 273).toFixed(1)}° L:{(props.minTemp - 273).toFixed(1)}°</h5>\n                    <p className=\"description\">{props.description}</p>\n                </div>\n                <div className=\"container-details\">\n                    <WeatherDetails title=\"Feels Like\" value={`${(props.feelsLike - 273).toFixed(1)}°`}/>\n                    <WeatherDetails title=\"Humidity\" value={`${props.humidity}%`}/>\n                    <WeatherDetails title=\"Pressure\" value={`${props.pressure} hPa`}/>\n                    <WeatherDetails title=\"Visibility\" value={`${props.visibility/1000} km`}/>\n                    <WeatherDetails title=\"Cloudiness\" value={`${props.cloudiness}%`}/>\n                    <WeatherDetails title=\"Wind\" value={`${`${props.windDeg}°`} at ${`${(props.windSpeed*(18/5)).toFixed(1)} km/hr`}`}/>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default WeatherData;","export default __webpack_public_path__ + \"static/media/clouds.a92806d6.png\";","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport WeatherData from './weatherData/WeatherData';\nimport './Weather.css';\nimport Clouds from '../../assets/clouds.png';\n\nconst api = axios.create();\n\nconst Weather = () => {\n\n    const [wData, setwData] = useState({\n        name : 'Search City',\n        sys : {\n            id : -1\n        },\n        weather : [{\n            description : 'none',\n            icon : '01d'\n        }],\n        main : {\n            feels_like : 273,\n            humidity : 0,\n            pressure : 0,\n            temp : 273,\n            temp_max : 273,\n            temp_min : 273\n        },\n        visibility : 0,\n        clouds : {\n            all : 0\n        },\n        wind : {\n            deg : 0,\n            speed : 0\n        }\n    });\n    const [city, setCity] = useState('');\n\n    const getData = async (event) => {\n        event.preventDefault();\n\n        await api.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=2a3485281c547c746c1233fd135b2ea5`).then(res => {\n            setwData(res.data);\n        }).catch(e => {\n            console.log(e);\n        })\n\n        setCity('');\n\n        console.log(wData);\n    }\n\n    const inputHandler = (event) => {\n        setCity(event.target.value);\n    }\n\n    return (\n        <>\n            <div className=\"header\">\n                <h3 className=\"header-app-name\">.weather</h3>\n            </div>\n            <div className=\"content\">\n                <div className=\"content-getWeather\">\n                    <h5 className=\"getWeather-moto\">Get weather on your fingertips</h5>\n                    <form onSubmit={getData}>\n                        <input className=\"input\" type=\"text\" placeholder=\"Enter City\" value={city} onChange={inputHandler} autoFocus></input>\n                    </form>\n                </div>\n                <div className=\"content-weather\">\n                    <TransitionGroup>\n                        <CSSTransition\n                            key={wData.sys.id}\n                            timeout={600}\n                            classNames=\"card\"\n                        >\n                            <WeatherData\n                                cityName={wData.name.toUpperCase()}\n                                iconp={`http://openweathermap.org/img/wn/${wData.weather[wData.weather.length-1].icon}@2x.png`}\n                                currentTemp={wData.main.temp}\n                                maxTemp={wData.main.temp_max}\n                                minTemp={wData.main.temp_min}\n                                description={wData.weather[wData.weather.length-1].description}\n                                feelsLike={wData.main.feels_like}\n                                humidity={wData.main.humidity}\n                                pressure={wData.main.pressure}\n                                visibility={wData.visibility}\n                                cloudiness={wData.clouds.all}\n                                windDeg={wData.wind.deg}\n                                windSpeed={wData.wind.speed}\n                            />\n                        </CSSTransition>\n                    </TransitionGroup>\n                </div>\n            </div>\n            <div className=\"footer\">\n                \n            </div>\n            <img className=\"image-clouds\" src={Clouds} alt=\"background_Clouds\"></img>\n        </>\n    )\n}\n\nexport default Weather;","import React from 'react';\nimport Weather from './components/weather/Weather';\n\nconst App = () => {\n  return (\n    <>\n      <Weather />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}